name: build_wheels

on:
 # push:
 #   branches: [ master ]
 # pull_request:
 #   branches: [ master ]
 release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    env:
      CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6"
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Install
        run: |
          set -xe
          pwd
          python --version
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install cibuildwheel
        shell: bash

      - name: Build wheels (macosx & win)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: set -xe && python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp3*-win* cp3*-macosx*"
          CIBW_SKIP: "*-win32"
        shell: bash

      - name: Build wheels (manylinux_2_24)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: set -xe && python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-manylinux*
          CIBW_SKIP: "*-manylinux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux_2_24
        shell: bash

      - name: Build wheels (manylinux2014)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: set -xe && python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-manylinux*
          CIBW_SKIP: "*-manylinux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: manylinux2014
        shell: bash

      - name: List wheels
        run: set -xe && ls -la wheelhouse
        shell: bash
